<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head> 
  <script type="text/javascript" src="../../snippet.js"></script> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
  <link href="../../styles.css" rel="StyleSheet" type="text/css" /> 
  <link href="../../snippet.css" rel="StyleSheet" type="text/css" /> 
  <title>Push Messaging</title> 
 </head> 
 <body onload="prettyPrint()"> 
  <h1>Push Messaging</h1> 
  <p>The Tizen <a href="../../../../org.tizen.mobile.native.apireference/group__CAPI__MESSAGING__PUSH__PUBLIC__MODULE.html">Push</a> API enables you to push events from an application server to your application on a Tizen device.</p> 
  <p class="figure">Figure: Push messaging service</p> 
  <p style="text-align:center;"><img alt="Push messaging service" src="../../images/ui_push_message.png" /></p> 
  <p>Once your application is successfully registered in the push server through the push daemon on the device, your application server can send push messages to the application in that particular device.</p> 
  <p>When a push message arrives when the application is running, it is automatically delivered to the application. If not, the daemon makes a sound or vibrates and adds a ticker or a badge notification to notify the user. By touching this notification, the user can check the message. The application server may send a message with a <span style="font-family: Courier New,Courier,monospace">LAUNCH</span> option. In this case, the daemon forcibly launches the application and hands over the message to the application as an <a href="../app/app_controls.htm">app control</a>.</p>
  
  <p>To use the push message service, you must get the required permissions.</p> 
  
  <h2 id="service" name="service">Service Architecture</h2> 
  <p>The following figure illustrates the service architecture of the Tizen push messaging service.</p> 
  <p class="figure">Figure: Service architecture</p> 
  <p style="text-align:center;"><img alt="Service architecture" src="../../images/service_architecture.png" /></p> 
  <p>The following steps illustrate a typical scenario for using the push messaging service on a Tizen device:</p> 
  <ol> 
   <li>The application on the device registers for the push messaging service.</li> 
   <li>The device establishes a push session with the Tizen Server. <p>The push session is managed by the Tizen server and device platform, so there is no need to create any code to manage it within the application.</p></li> 
   <li>If the registration succeeds, the application receives a registration ID, which is a unique key for identifying the device and routing the push message. <p>The application delivers the identifier to the application server.</p></li> 
   <li>When the application server needs to send a push message to the application, it calls the Tizen server&#39;s open API. <p>A text message of up to 1024 bytes can be sent in a push message. If the application needs to download a large amount of data, the application server sends a link to the data in the push message.</p></li> 
   <li>The Tizen Server routes the push message to the target device with a given registration ID.</li> 
   <li>The application receives the push message.</li> 
  </ol> 

  <h2>Where to Go Next</h2> 
  <ul> 
   <li><a href="messaging.htm">Messaging Programming Guide</a></li> 
  </ul> 

  <div id="footer"> 
   <hr size="1" /> 
   <font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font> 
  </div> 
  <!--start--> 
  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
  <!--end-->  
 </body>
</html>