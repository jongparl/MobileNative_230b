 <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head> 
  <script type="text/javascript" src="../../snippet.js"></script> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
  <link href="../../styles.css" rel="StyleSheet" type="text/css" /> 
  <link href="../../snippet.css" rel="StyleSheet" type="text/css" /> 
  <title>Data Controls</title> 
 </head> 
 <body onload="prettyPrint()"> 
 
<h1>Data Controls</h1>

<p>Data control is a standard mechanism for exchanging specific data between applications.</p>
 
      <p class="figure">Figure: Data control mechanism</p> 
  <p style="text-align:center;"><img alt="Data control mechanism" src="../../images/datacontrol.png" /></p>
 
<p>All applications can request data shared by other applications using a data control. However, only service applications can provide their own data.</p>
<p>There are 2 types of data controls:</p>
<ul><li>DATA_CONTROL_SQL
<p>Allows you to use an SQL-type data control to access specific data exported by other service applications. You can also define an SQL-type data control provider to export specific data from your service application.</p></li>
<li>DATA_CONTROL_MAP
<p>Allows you to use a key-value-type data control to access data exported by other service applications. You can also define a key-value-type data control provider to export specific data from your service application.</p></li></ul>
<p>Data controls can supply operations to access shared data and get back results.</p>
<p>The data control requires the following provider information:</p>
<ul><li>Provider ID
<p>Unique provider ID to identify the data control for a specific provider.</p>
<p>Format:</p>
<ul><li>Provider ID must consist of alpha-numeric letters separated with the period (&quot;.&quot;) character, and it must start with letters.</li>
<li>Custom provider ID must start with a vendor name to avoid conflicts with other developers.</li>
<li>IRI format: <span style="font-family: Courier New,Courier,monospace">http://{provider URI}/datacontrol/provider/{provider name}</span></li></ul></li>
<li>Data ID
<p>String ID for identifying specific data, usually a database table name or a registry section name.</p>
<p>Format:</p>
<ul><li>Data ID consists of one or more components, separated by a slash (&quot;/&quot;) character.</li></ul></li></ul>


<h2>Using Data Controls</h2>
<p>You can get a <span style="font-family: Courier New,Courier,monospace">datacontrol_h</span> instance from the <span style="font-family: Courier New,Courier,monospace">datacontrol_map_create()</span> or <span style="font-family: Courier New,Courier,monospace">datacontrol_sql_create()</span> function.</p>
<ul><li>Map type data control
<p>If you specify the <span style="font-family: Courier New,Courier,monospace">datacontrol_h</span> instance using the <span style="font-family: Courier New,Courier,monospace">data_control_map_create()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_map_set_provider_id()</span>, or <span style="font-family: Courier New,Courier,monospace">data_control_map_set_data_id()</span> function, you can get the specific map-type data control uniquely. </p>
<p>After resolving the data control, call the data control map APIs, such as <span style="font-family: Courier New,Courier,monospace">data_control_map_set()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_map_get()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_map_add()</span>, and <span style="font-family: Courier New,Courier,monospace">data_control_map_remove()</span>.</p>
<p>The result is returned by a response callback, such as <span style="font-family: Courier New,Courier,monospace">data_control_map_get_response_cb()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_map_set_response_cb()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_map_add_response_cb()</span>, or <span style="font-family: Courier New,Courier,monospace">data_control_map_remove_response_cb()</span> of the <span style="font-family: Courier New,Courier,monospace">data_control_map_response_cb struct</span>. The response callback is invoked when a service application finishes its operation.</p></li>
<li>Sql type data control
<p>If you specify the <span style="font-family: Courier New,Courier,monospace">datacontrol_h</span> instance using the <span style="font-family: Courier New,Courier,monospace">data_control_sql_create()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_sql_set_provider_id()</span>, or <span style="font-family: Courier New,Courier,monospace">data_control_sql_set_data_id()</span> function, you can get the specific SQL-type data control uniquely. </p>
<p>After resolving the data control, call the data control SQL APIs, such as  <span style="font-family: Courier New,Courier,monospace">datacontrol_sql_select()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_sql_insert()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_sql_update()</span>, and <span style="font-family: Courier New,Courier,monospace">data_control_sql_delete()</span>.</p>
<p>The result is returned by a response callback, such as <span style="font-family: Courier New,Courier,monospace">data_control_sql_select_response_cb()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_sql_insert_response_cb()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_sql_update_response_cb()</span>, or <span style="font-family: Courier New,Courier,monospace">data_control_sql_delete_response_cb()</span> of the <span style="font-family: Courier New,Courier,monospace">data_control_sql_response_cb struct</span>. The response callback is invoked when a service application finishes its operation.</p>
<p>Once you get the <span style="font-family: Courier New,Courier,monospace">result_set_cursor</span> using the <span style="font-family: Courier New,Courier,monospace">data_control_sql_select_response_cb()</span> callback, you can use the following functions to get information:</p>
<ul><li><span style="font-family: Courier New,Courier,monospace">data_control_sql_step_first()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_step_last()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_step_next()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_set_previous()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_column_count()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_column_name()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_column_item_size()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_column_item_type()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_blob_data()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_int_data()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_int64_data()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_double_data()</span></li>
<li><span style="font-family: Courier New,Courier,monospace">data_control_sql_get_text_data()</span></li></ul></li></ul>

<h2>Developing with Data Controls</h2>
<p>You can develop with data controls by adding the <span style="font-family: Courier New,Courier,monospace">&lt;datacontrol&gt;</span> element to the <span style="font-family: Courier New,Courier,monospace">manifest.xml</span> file.</p>
<p>The following code example describes how to add the <span style="font-family: Courier New,Courier,monospace">&lt;datacontrol&gt;</span> element:</p>
<pre class="prettyprint">
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns=&quot;http://tizen.org/ns/packages&quot; package=&quot;@PACKAGE_NAME@&quot; version=&quot;@VERSION@&quot; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;install-location=&quot;internal-only&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;label&gt;datacontrolprovider&lt;/label&gt;
&nbsp;&nbsp;&nbsp;&lt;author email=&quot;PUT YOUR EMAIL&quot; href=&quot;www.samsung.com&quot;&gt;PUT YOUR NAME&lt;/author&gt;
&nbsp;&nbsp;&nbsp;&lt;description&gt;datacontrolprovider&lt;/description&gt;
&nbsp;&nbsp;&nbsp;&lt;ui-application appid=&quot;org.tizen.datacontrolprovider&quot; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec=&quot;/opt/apps/org.tizen.datacontrolprovider/bin/datacontrolprovider&quot; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodisplay=&quot;true&quot; multiple=&quot;false&quot; type=&quot;capp&quot; taskmanage=&quot;true&quot; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;auto-restart=&quot;false&quot; on-boot=&quot;false&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;datacontrol providerid=&quot;http://samsung.com/datacontrol/provider/datacontrolprovider&quot; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access=&quot;ReadWrite&quot; type=&quot;Sql&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;datacontrol providerid=&quot;http://samsung.com/datacontrol/provider/datacontrolprovider&quot; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access=&quot;ReadWrite&quot; type=&quot;Map&quot;/&gt;
&nbsp;&nbsp;&nbsp;&lt;/ui-application&gt;
&lt;/manifest&gt;
</pre>

<p>The service application providing its own database file must register the provider callback using the <span style="font-family: Courier New,Courier,monospace">data_control_provider_sql_register_cb()</span> function. Similarly, the service application providing its own registry file or key-value pairs data set must register the provider callback using the <span style="font-family: Courier New,Courier,monospace">data_control_provider_map_register_cb()</span> function.</p>
<p>The service application sends the SQL- or map-type data control result to the other application by using functions, such as <span style="font-family: Courier New,Courier,monospace">data_control_provider_send_select_result()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_provider_send_insert_result()</span>, <span style="font-family: Courier New,Courier,monospace">data_control_provider_send_update_result()</span>, or <span style="font-family: Courier New,Courier,monospace">data_control_provider_send_delete_result()</span>.</p>
 

<p>You can <a href="exporting_datacontrol_functionality.htm">export the data of your service application</a> to other applications.</p> 
 
<h2>Where to Go Next</h2>
<ul>
<li><a href="application.htm">Application Framework Programming Guide</a></li>
<li><a href="../../tutorials/app_tutorial/data_control_tutorial.htm">Data Control Tutorial</a></li>
</ul>

  <div id="footer"> 
   <hr size="1" /> 
   <font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font> 
  </div> 
  <!--start--> 
  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
  <!--end-->  
 </body>
</html>