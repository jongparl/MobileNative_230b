<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head> 
  <script type="text/javascript" src="../../snippet.js"></script> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
  <link href="../../styles.css" rel="StyleSheet" type="text/css" /> 
  <link href="../../snippet.css" rel="StyleSheet" type="text/css" /> 
  <title>Eina Data Types</title> 
 </head> 
 <body onload="prettyPrint()"> 
  <!--<div id="banner">
Tizen</div>--> 
  <h1>Eina Data Types</h1> 
  
<p>The Eina library is a central part of the EFL. It implements an API for data types, and allows you to create and manipulate several data types:</p>

<ul>
<li><a href="data_type_structures.htm#inline">Inline Array</a>: standard array of inlined members</li>
<li><a href="data_type_structures.htm#array">Array</a>: standard array of <span style="font-family: Courier New,Courier,monospace;">void*</span> data</li>
<li><a href="data_type_structures.htm#hash">Hash Table</a>: standard hash of <span style="font-family: Courier New,Courier,monospace;">void*</span> data</li>
<li><a href="data_type_structures.htm#inlist">Inline List</a>: list with nodes inlined into the user type</li>
<li>Compact List: compact list</li>
<li><a href="data_type_structures.htm#list">List</a>: standard list of <span style="font-family: Courier New,Courier,monospace;">void*</span> data</li>
<li><a href="data_type_structures.htm#iterate">Iterator Functions</a>: iterator functions</li>
<li>Sparse Matrix: sparse matrix of <span style="font-family: Courier New,Courier,monospace;">void*</span> data</li>
<li>Red-Black tree: red-black tree with nodes inlined into the user type</li>
<li><a href="data_type_structures.htm#buffer">String Buffer</a>: mutable string to prepend, insert, or append strings to a buffer</li>
<li><a href="data_type_structures.htm#share">Stringshare</a>: saves memory by sharing read-only string references</li>
<li>Tiler split: merges and navigates into 2D tiled regions</li>
<li>Trash: container of unused but allocated data</li>
<li><a href="data_type_structures.htm#generic">Generic Value Storage</a>: container for generic value storage and access</li>
<li>Data Model API: container for data with a user-defined hierarchy or structure</li>
</ul>

<p>The Eina library also provides a set of useful tools:</p>

<ul>
<li>Convert fast: conversion from, for example, strings to integers and double</li>
<li>Counter: measures the number of calls and their time</li>
<li>Error: error identifiers</li>
<li>File: simple file list and path split</li>
<li>Lazy allocator: simple lazy allocator</li>
<li>Log: full-featured logging system</li>
<li>Magic: provides runtime type checking</li>
<li><a href="data_type_tools.htm#memory">Memory Pool</a>: abstraction for various memory allocators</li>
<li>Module lists: load and share modules using the <span style="font-family: Courier New,Courier,monospace;">Eina_Module</span> standard</li>
<li>Rectangle: rectangle structure and standard manipulation methods</li>
<li><a href="data_type_tools.htm#safety">Safety Checks</a>: extra checks that report unexpected conditions and can be disabled during compilation</li>
<li><a href="data_type_tools.htm#string">String</a>: set of functions that manage C strings</li>
</ul>


  <h2>Where to Go Next</h2> 
  <ul> 
	<li><a href="ui.htm">UI Programming Guide</a></li>   
  </ul> 
 
 
  <div id="footer"> 
   <hr size="1" /> 
   <font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font> 
  </div> 

  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
 
 </body>
</html>