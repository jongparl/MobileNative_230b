<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head> 
  <script type="text/javascript" src="../../snippet.js"></script> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
  <link href="../../styles.css" rel="StyleSheet" type="text/css" /> 
  <link href="../../snippet.css" rel="StyleSheet" type="text/css" />
<title>TBM Surface Tutorial</title> 
 </head> 
 <body onload="prettyPrint()"> 
  <!--<div id="banner">
Tizen</div>--> 
  <h1>TBM Surface Tutorial</h1> 
<p>This tutorial demonstrates how you can create, destroy, map, unmap, and access surface that is a kind of graphic buffer.</p>

<p>The TBM Surface API functions and data types are defined in the <span style="font-family: Courier New,Courier,monospace">&lt;tbm_surface.h&gt;</span> header file, which must be included in all applications that use the <a href="../../../../org.tizen.mobile.native.apireference/group__CAPI__UI__TBM__SURFACE__MODULE.html">TBM Surface</a> API.
</p>
  
<p>To learn about the TBM Surface API features, see the <a href="../../guide/ui/tbm.htm">TBM Surface Programming Guide</a>.</p>

<p>This tutorial consists of the following parts:</p>
<ul>
	<li><a href="#init">Initialization and Prerequisites</a></li>
	<li><a href="#create">Managing TBM Surface</a>
	<p>Create and manage the TBM Surface.</p></li>
</ul>


<h2 id="init" name="init">Initialization and Prerequisites</h2>
<p>The TBM Surface API provides a user interface (<span style="font-family: Courier New,Courier,monospace">tbm_surface</span>) for the Tizen buffer manager (<span style="font-family: Courier New,Courier,monospace">tbm_bufmgr</span>). The Tizen buffer manager manages the user interface.</p>

<p>TBM provides the TGL (Tizen Global Lock) general lock mechanism for the graphic buffer. Cache flushing in TBM is executed automatically according to the access type and the device type when the buffer is mapped. You can define the lock type and cache flush type with the environment variables <span style="font-family: Courier New,Courier,monospace">BUFMGR_LOCK_TYPE</span> and <span style="font-family: Courier New,Courier,monospace">BUFMGR_MAP_CACHE</span>.</p>

<p><span style="font-family: Courier New,Courier,monospace">BUFMGR_LOCK_TYPE</span> values:</p>

<ul>
	<li><span style="font-family: Courier New,Courier,monospace">once</span> (default): The previously locked surface is unlocked when a new surface lock is attempted</li>
	<li><span style="font-family: Courier New,Courier,monospace">always</span>: The new surface is locked until the previously locked surface is unlocked</li>
	<li><span style="font-family: Courier New,Courier,monospace">never</span>: The surfaces are never locked</li>
</ul>

<p><span style="font-family: Courier New,Courier,monospace">BUFMGR_MAP_CACHE</span> values:</p>

<ul>
	<li><span style="font-family: Courier New,Courier,monospace">true</span> (default): Map cache flushing is used</li>
	<li><span style="font-family: Courier New,Courier,monospace">false</span>: Map cache flushing is not used</li>
</ul>

<p>Create the Tizen buffer manager using the <span style="font-family: Courier New,Courier,monospace">tbm_surface_create_bufmgr()</span> function:</p>

<pre class="prettyprint">
#include &lt;tbm_surface.h&gt;

tbm_bufmgr bufmgr;
bufmgr = tbm_surface_bufmgr_init();
</pre>

<p>To change the lock type and cache flush type, set the environment variables:</p>

<pre class="prettyprint">
#include &lt;tbm_surface.h&gt;

tbm_bufmgr bufmgr;

setenv(&quot;BUFMGR_LOCK_TYPE&quot;, &quot;once&quot;, 1);
setenv(&quot;BUFMGR_MAP_CACHE&quot;, &quot;true&quot;, 1);

bufmgr = tbm_surface_bufmgr_init();
</pre>


<h2 id="create" name="create">Managing TBM Surface</h2>
<p>When you create the TBM surface, you define its width, height, and format.</p>

<ol>
<li>Create the buffer manager (<span style="font-family: Courier New,Courier,monospace">tbm_bufmgr</span>):
<pre class="prettyprint">
#include &lt;tbm_surface.h&gt;

tbm_bufmgr bufmgr;

bufmgr = tbm_surface_bufmgr_init();
</pre>
</li>

<li>Query the formats supported by the system:
<pre class="prettyprint">
tbm_format *formats;
uint32_t format_num;

if (!tbm_surface_bufmgr_query_formats (bufmgr, &amp;formats, &amp;format_num))
{
&nbsp;&nbsp;&nbsp;fprintf (stderr, &quot;Failed to get formats supported by the system\n&quot;);
}
</pre>
</li>

<li>
<p>After checking which formats the system supports, create the TBM surface (<span style="font-family: Courier New,Courier,monospace">tbm_surface</span>), defining its format, height, and width:</p>
<pre class="prettyprint">
int i;
tbm_surface surface = NULL;

for (i=0 ; i&lt;format_num ; i++)
{
&nbsp;&nbsp;&nbsp;if (formats[i] == TBM_FORMAT_YUV410)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;surface = tbm_surface_create (tbm_bufmgr, 128, 128, TBM_FORMAT_YUV);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (surface == NULL)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fprintf (stderr, &quot;Failed to create tbm_surface\n&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;}
}
if (i == format_num)
{
&nbsp;&nbsp;&nbsp;fprintf (stderr, &quot;format not supported\n&quot;);
}
</pre>
</li>

<li>
<p>Map the TBM surface with the access option. After the surface is mapped, the <span style="font-family: Courier New,Courier,monospace">tbm_surface</span> information is saved in the <span style="font-family: Courier New,Courier,monospace">tbm_surface_info</span> structure:</p>
<pre class="prettyprint">
tbm_surface_info surface_info;

if (!tbm_surface_map (surface, TBM_SURF_OPTION_READ|TBM_SURF_OPTION_WRITE, &amp;surface_info))
{
&nbsp;&nbsp;&nbsp;fprintf(stderr, &quot;Fail to map tbm_surface\n&quot;);
}

memset (surface_info.planes[i].ptr, 0x0, surface_info.width * surface_info.height);
</pre>
</li>

<li>Unmap and destroy <span style="font-family: Courier New,Courier,monospace">tbm_surface</span> and deinitialize <span style="font-family: Courier New,Courier,monospace">tbm_bufmgr</span>.
<pre class="prettyprint">
if (!tbm_surface_unmap (surface))
{
&nbsp;&nbsp;&nbsp;fprintf (&quot;Failed to unmap tbm_surface\n&quot;);
}
tbm_surface_destroy (surface);
tbm_surface_bufmgr_deinit (bufmgr);
</pre>
</li>
</ol>

<h2>Where to Go Next</h2> 
  <ul> 
   <li><a href="ui_tutorial.htm">UI Tutorials</a></li> 
   <li><a href="../../guide/ui/tbm.htm">TBM Surface Programming Guide</a></li>
   <li><a href="../../../../org.tizen.mobile.native.apireference/group__CAPI__UI__TBM__SURFACE__MODULE.html">TBM Surface API Reference</a></li>
  </ul> 

  <div id="footer"> 
   <hr size="1" /> 
   <font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font> 
  </div> 
  <!--start--> 
  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
  <!--end-->  
 </body>
</html>