<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head> 
  <script type="text/javascript" src="../../snippet.js"></script> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
  <link href="../../styles.css" rel="StyleSheet" type="text/css" /> 
  <link href="../../snippet.css" rel="StyleSheet" type="text/css" /> 
  <title>Notification Tutorial</title> 
 </head> 
 <body onload="prettyPrint()"> 
  <h1>Notification Tutorial</h1> 
  <p>This tutorial demonstrates how you can use the <a href="../../../../org.tizen.mobile.native.apireference/group__NOTIFICATION__MODULE.html">Notification API</a>.</p>
  <p>Functions contained in those modules allow you to manage the notification container and to display simple messages. API functions and data types are defined in <span style="font-family: Courier New,Courier,monospace">notification.h</span> header. This header file has to be included in all applications that use Notification API.</p>

<p>To learn about the Notification API features, see the <a href="../../guide/app/notification.htm">Notifications Programming Guide</a>.</p>

<p>This tutorial consists of the following parts:</p>
	<ul>
		<li><a href="#initialize">Initialization and Prerequisites</a></li>
		<li><a href="#use">Using the Notification List</a>
		<p>Search for notifications and iterate through the results.</p></li>
		<li><a href="#status">Displaying the Notification Status</a>
		<p>Display and track the notification status.</p></li>
		<li><a href="#bar">Displaying the Progress Bar</a>
		<p>Create, display, and update a progress bar.</p></li>

   </ul>  
  
  
  
 <h2 id="initialize" name="initialize">Initialization and Prerequisites</h2>
  
<p>To access notifications, use <span style="font-family: Courier New,Courier,monospace">#include &lt;notification.h&gt;</span> in your source files.</p>

 <h2 id="use" name="use">Using the Notification List</h2>

<p>To use the notification list, and search and iterate through the records.</p>

<ol><li>Define the data types.

<p>To store the list and notification instances, use the following data types:</p>

<pre class="prettyprint">
notification_list_h list, list_tail;
notification_h notification0, notification1;
notification_h noti_from_list;
</pre>	</li>
	
<li>Prepare the list.
	
<p>To perform any operations on the notification list, create a list instance with the <span style="font-family: Courier New,Courier,monospace">notification_get_list()</span> or <span style="font-family: Courier New,Courier,monospace">notification_get_detail_list()</span> function. Both functions return a list of notifications currently existing in the system. With <span style="font-family: Courier New,Courier,monospace">notification_get_detail_list()</span>, you can specify a range of the returned notifications. If the count parameter is equal to -1, all notifications stored on the notification lists are returned.</p>

<p>To add a new record to the notification list, an existing instance of the notification is required. In this tutorial, the instance is created with the <span style="font-family: Courier New,Courier,monospace">GetNewNotification()</span> function.</p>

<pre class="prettyprint">
notification_get_list(NOTIFICATION_TYPE_NONE, -1, &amp;list);

GetNewNotification(&amp;notification0, &quot;Notification&quot;, NOTIFICATION_LY_ONGOING_EVENT);

list = notification_list_append(list, notification0);

GetNewNotification(&amp;notification1, &quot;Next message&quot;, NOTIFICATION_LY_ONGOING_EVENT);

list = notification_list_append(list, notification1);
</pre>	</li>

<li>Add a new notification.
<p>The notification is added to the list by reading an existing instance with the <span style="font-family: Courier New,Courier,monospace">GetNewNotification()</span> function:</p>

<pre class="prettyprint">
static int GetNewNotification(notification_h * notification, char * msg, notification_ly_type_e type)
{
&nbsp;&nbsp;&nbsp;int ret = 0;
&nbsp;&nbsp;&nbsp;*notification = NULL;

&nbsp;&nbsp;&nbsp;*notification = notification_create(NOTIFICATION_TYPE_NOTI);

&nbsp;&nbsp;&nbsp;notification_set_text(*notification, NOTIFICATION_TEXT_TYPE_TITLE, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg, NULL, NOTIFICATION_VARIABLE_TYPE_NONE);

&nbsp;&nbsp;&nbsp;notification_set_time_to_text(*notification, 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NOTIFICATION_TEXT_TYPE_CONTENT, time(NULL));
       
&nbsp;&nbsp;&nbsp;notification_set_led(*notification, NOTIFICATION_LED_OP_ON, 100);

&nbsp;&nbsp;&nbsp;notification_set_led_time_period(*notification, 100, 100);

&nbsp;&nbsp;&nbsp;notification_set_property(*notification, NOTIFICATION_PROP_DISABLE_APP_LAUNCH);

&nbsp;&nbsp;&nbsp;notification_set_display_applist(*notification, NOTIFICATION_DISPLAY_APP_ALL);

&nbsp;&nbsp;&nbsp;notification_set_image(*notification, NOTIFICATION_IMAGE_TYPE_ICON, image_path);

&nbsp;&nbsp;&nbsp;notification_set_size(*notification, 0.5);

&nbsp;&nbsp;&nbsp;notification_set_layout(*notification, type);
}
</pre></li>

<li>Iterate through the list. 
 
<p>To iterate through the notification list items, use the following functions:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">notification_list_get_head</span> returns the first item in the notification list</li>
<li><span style="font-family: Courier New,Courier,monospace">notification_list_get_tail</span> returns the last item in the notification list</li>
<li><span style="font-family: Courier New,Courier,monospace">notification_list_get_prev</span> returns the previous item in the notification list</li>
<li><span style="font-family: Courier New,Courier,monospace">notification_list_get_next</span> returns the next item in the notification list</li>
</ul>

<p>Calling <span style="font-family: Courier New,Courier,monospace">notification_list_get_data()</span> returns <span style="font-family: Courier New,Courier,monospace">notification_h</span>. To make the notification visible for the user, call <span style="font-family: Courier New,Courier,monospace">notification_insert()</span>.</p>

 <pre class="prettyprint">
list_tail = notification_list_get_tail(list);
list = notification_list_get_head(list);

while(list != list_tail)
{
&nbsp;&nbsp;&nbsp;noti_from_list =  notification_list_get_data(list);
&nbsp;&nbsp;&nbsp;notification_insert(noti_from_list, &amp;priv_id); 
&nbsp;&nbsp;&nbsp;list = notification_list_get_next(list);
}
noti_from_list = notification_list_get_data(list);

notification_insert(noti_from_list, &amp;priv_id);
</pre>
</li>

<li>Clean up.
<p>Clear the resources that are no longer needed:</p> 

<pre class="prettyprint">
notification_delete_all_by_type(NULL, NOTIFICATION_TYPE_ONGOING);

notification_free_list(list);

notification_delete(notification0);
notification_delete(notification1);
</pre></li></ol>


    <p class="figure">Figure: Notification screen</p> 
  <p style="text-align:center;"><img alt="Notification screen" src="../../images/notification_sd.png" /></p>

 <h2 id="status" name="status">Displaying the Notification Status</h2>

<p>The <a href="../../../../org.tizen.mobile.native.apireference/group__NOTIFICATION__STATUS.html">Notification Status API</a> allows you to display short messages on the top of home screen:</p>

<ol><li><p>Define the message and register the callback for tracking the status of the message:</p>

<pre class="prettyprint">
notification_status_monitor_message_cb_set(_notification_status_message_cb, NULL);

notification_status_message_post(&quot;Example 2 Msg.&quot;);

notification_status_monitor_message_cb_unset();
</pre></li>

<li><p>When the message is posted on screen, the callback function is invoked:</p>

<pre class="prettyprint">
static void _notification_status_message_cb(const char *message, void *data)
{
&nbsp;&nbsp;&nbsp;fprintf(stderr, &quot;Callback: %s\n&quot;, message);
}
</pre></li></ol>

    <p class="figure">Figure: Notification status</p> 
  <p style="text-align:center;"><img alt="Notification status" src="../../images/notification_status_sd.png" /></p>

 <h2 id="bar" name="bar">Displaying the Progress Bar</h2>

<p>The Notification API provides allows you to create a progress bar, which is initialized by the argument <span style="font-family: Courier New,Courier,monospace">NOTIFICATION_LY_ONGOING_PROGRESS</span> in <span style="font-family: Courier New,Courier,monospace">GetNewNotification()</span>.</p>

<ol><li>To set the initial progress:

<pre class="prettyprint">
static GMainLoop* gmainloop = NULL;
mainloop = g_main_loop_new(NULL, FALSE);

GetNewNotification(&amp;notification, &quot;Notification&quot;, NOTIFICATION_LY_ONGOING_PROGRESS);

notification_set_progress(notification, 0);

notification_insert(notification, &amp;priv_id);

g_timeout_add(1000, timeout_func, gmainloop);
g_main_loop_run(gmainloop);
g_main_loop_unref(gmainloop);

notification_delete(notification);
notification_delete_all_by_type(NULL, NOTIFICATION_TYPE_ONGOING);
</pre></li>


<li>To update the progress bar, use the <span style="font-family: Courier New,Courier,monospace">notification_update_progress</span> function:

<pre class="prettyprint">
static gboolean timeout_func(gpointer data)
{
&nbsp;&nbsp;&nbsp;static int i = 0;
&nbsp;&nbsp;&nbsp;double percent = 0;
&nbsp;&nbsp;&nbsp;i++;
&nbsp;&nbsp;&nbsp;notification_update_progress (notification, priv_id, ((double) i / 10.0));
&nbsp;&nbsp;&nbsp;notification_get_progress (notification, &amp;percent);
  	â€¦
&nbsp;&nbsp;&nbsp;fprintf(stderr, &quot;Progress: %f\n&quot;, percent);

&nbsp;&nbsp;&nbsp;if (timeout == i) 
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g_main_loop_quit((GMainLoop*) data);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fprintf(stderr, &quot;End of awaiting!\n&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return FALSE;
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;return TRUE;
}
</pre></li></ol>

    <p class="figure">Figure: Progress bar</p> 
  <p style="text-align:center;"><img alt="Progress bar" src="../../images/notification_bar_sd.png" /></p>

  <h2>Where to Go Next</h2> 
  <ul>  
	<li><a href="advanced_tutorial.htm">Advanced Tutorials</a></li>
	<li><a href="../../guide/app/notification.htm">Notifications Programming Guide</a></li> 
	<li><a href="../../../../org.tizen.mobile.native.apireference/group__NOTIFICATION__MODULE.html">Notification API Reference</a></li>  
  </ul> 
  <div id="footer"> 
   <hr size="1" /> 
   <font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font> 
  </div> 
   
  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
    
 </body>
</html>