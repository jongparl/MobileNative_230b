<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head> 
  <script type="text/javascript" src="../../snippet.js"></script> 
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
  <link href="../../styles.css" rel="StyleSheet" type="text/css" /> 
  <link href="../../snippet.css" rel="StyleSheet" type="text/css" /> 
  <title>Location Tracking Tutorial</title> 
 </head> 
 <body onload="prettyPrint()"> 
  <!--<div id="banner">
Tizen</div>--> 
  <h1>Location Tracking Tutorial</h1> 

  <p>This tutorial demonstrates how you can track position, location, and velocity.</p>
<p>API functions and data types are defined in the <span style="font-family: Courier New,Courier,monospace;">&lt;locations.h&gt;</span> header file, which has to be included in all applications that use the <a href="../../../../org.tizen.mobile.native.apireference/group__CAPI__LOCATION__FRAMEWORK.html">Location</a> API.</p>

<p>To learn about the Location API features, see the <a href="../../guide/location/location.htm">Location Programming Guide</a>.</p>

<p>This tutorial consists of the following parts:</p>
	<ul>
		<li><a href="#initialize">Initialization and Deinitialization</a></li>
		<li><a href="#track">Tracking the Route</a>
		<p>Get information about the current position, velocity, and distance.</p></li>
   </ul>
 
 <h2 id="initialize" name="initialize">Initialization and Deinitialization</h2>
 
<p>To initialize the location service:</p>

<ol><li>Create a location manager handle using the <span style="font-family: Courier New,Courier,monospace;">location_manager_create()</span> function. For this example, the GPS is used as the source of position data, so the first argument is <span style="font-family: Courier New,Courier,monospace;">LOCATIONS_METHOD_GPS</span>. You can use other values of the <span style="font-family: Courier New,Courier,monospace;">location_method_e</span> enumeration, such as <span style="font-family: Courier New,Courier,monospace;">LOCATIONS_METHOD_HYBRID</span> or <span style="font-family: Courier New,Courier,monospace;">LOCATIONS_METHOD_CPS</span>, but they are less accurate.</p>

<pre class="prettyprint">
location_manager_create(LOCATIONS_METHOD_GPS, &amp;manager);
</pre></li>

<li><p>Start the location service using the <span style="font-family: Courier New,Courier,monospace;">location_manager_start()</span> function. The call is asynchronous and only initiates the process of starting the service of the location manager. Once the manager is started, the registered callbacks are invoked when their corresponding events take place. To check when the service becomes enabled, use the <span style="font-family: Courier New,Courier,monospace;">location_manager_set_service_state_changed_cb()</span> function.</p>

<pre class="prettyprint">
location_manager_start(manager);
</pre></li>

<li><p>Using the location service is power consuming, so if the service is not used, stop updating the location using the <span style="font-family: Courier New,Courier,monospace;">location_manager_stop()</span> function. Call the <span style="font-family: Courier New,Courier,monospace;">location_manager_start()</span> function again if the update position information is needed.</p>

<pre class="prettyprint">
location_manager_stop(manager);
</pre></li>

<li><p>At the end of the application, destroy all used resources by using the <span style="font-family: Courier New,Courier,monospace;">location_manager_destroy()</span> function:</p>

<pre class="prettyprint">
location_manager_destroy(manager);
manager = NULL;
</pre>
<p>If you destroy the handle, do not call the <span style="font-family: Courier New,Courier,monospace;">location_manager_stop()</span> function to stop the service, since the service is automatically stopped. Also, you do not have to unset the previously set callbacks.</p>
</li></ol>



 <h2 id="track" name="track">Tracking the Route</h2>
 <p>To get information about the current position, velocity, and distance.</p>
 
<ol><li>Receive periodic notifications.
<ol><li>
<p>You can get notifications of the position and velocity update using the position and velocity update callbacks. The callbacks are invoked periodically, receiving the device&#39;s current position or velocity with every call.</p>

<ul><li><p>Register the position update callback using the <span style="font-family: Courier New,Courier,monospace;">location_manager_set_position_updated_cb()</span> function:</p>

<pre class="prettyprint">
location_manager_set_position_updated_cb(manager, position_updated, 2, NULL);
</pre></li>

<li><p>Register the velocity update callback using the <span style="font-family: Courier New,Courier,monospace;">location_manager_set_velocity_updated_cb()</span> function:</p>

<pre class="prettyprint">
location_manager_set_position_updated_cb(manager, velocity_updated, 2, NULL);
</pre></li></ul>

<p>The third parameter determines the frequency of the callback calls. In this example, the callback is called every 2 seconds.</p></li>

<li><p>Define the position and velocity callback functions:</p>

<pre class="prettyprint">
void position_updated(double latitude, double longitude, double altitude, time_t timestamp, void *user_data);
void velocity_updated(double speed, double direction, double climb, time_t timestamp, void *user_data);
</pre>

<p>Within the function, you can collect obtained data to get the points you have visited, to calculate traveled distance more precisely, or to calculate the average speed or climb.</p></li></ol></li>

<li>Receive the current information.
<p>You can get the current information about position, velocity, or localization accuracy:
<ul><li>To get information about the current position (altitude, latitude and longitude), use the <span style="font-family: Courier New,Courier,monospace;">location_manager_get_position()</span> function:</p>

<pre class="prettyprint">
time_t timestamp;
double altitude;
double latitude;
double longitude;
location_manager_get_position(manager, &amp;altitude, &amp;latitude, &amp;longitude, &amp;timestamp);
</pre></li>

<li><p>To get information about the current velocity (climb in km/h, direction as degrees from the north and speed in km/h), use the <span style="font-family: Courier New,Courier,monospace;">location_manager_get_velocity()</span> function:</p>

<pre class="prettyprint">
double climb;
double direction;
double speed;
location_manager_get_velocity(manager, &amp;climb, &amp;direction, &amp;speed, &amp;timestamp);
</pre></li>

<li><p>To get information about the current accuracy (level â€“ see the <a href="../../../../org.tizen.mobile.native.apireference/group__CAPI__LOCATION__MANAGER__MODULE.html#ga4878b9a0afa5990dd2bb500850c1828b">location_accuracy_level_e</a> enumeration, and horizontal and vertical accuracy), use the <span style="font-family: Courier New,Courier,monospace;">location_manager_get_accuracy()</span> function:</p>

<pre class="prettyprint">
location_accuracy_level_e level;
double horizontal;
double vertical;
location_manager_get_accuracy(manager, &amp;level, &amp;horizontal, &amp;vertical);
</pre></li>

<li><p>Use the <span style="font-family: Courier New,Courier,monospace;">location_manager_get_location()</span> function to get all of the above 10 values at once:</p>

<pre class="prettyprint">
location_manager_get_location(manager, &amp;altitude, &amp;latitude, &amp;longitude, &amp;climb, &amp;direction, &amp;speed, &amp;level, &amp;horizontal, &amp;vertical, &amp;timestamp);
</pre></li>

<li><p>If the location service is currently unavailable, get the last values recorded by the location manager when the GPS signal was available. To get the information, use the following functions:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace;">location_manager_get_last_position()</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">location_manager_get_last_velocity()</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">location_manager_get_last_accuracy()</span></li>
<li><span style="font-family: Courier New,Courier,monospace;">location_manager_get_last_location()</span></li>
</ul>

<p>The syntax of these functions corresponds to the functions presented above.</p></li></ul></li>

<li>Get the distance.
<p>To get a distance (in meters) between 2 points, use the <span style="font-family: Courier New,Courier,monospace;">location_manager_get_distance()</span> function. The obtained value is a great-circle distance; the shortest distance between 2 points on the sphere.</p>
<p>Provide the latitude and longitude of the starting point, the latitude and longitude of the end point, and the variable to store obtained distance:</p>

<pre class="prettyprint">
double distance;
location_manager_get_distance(37.28, 127.01, 52.23, 21.01, &amp;distance);
</pre>

<p>To get more precise traveled distance, sum distances between each 2 consecutive points, delivered by the periodic position update callback.</p></li></ol>

  <h2>Where to Go Next</h2> 
  <ul> 
	<li><a href="advanced_tutorial.htm">Advanced Tutorial</a></li>
	<li><a href="../../guide/location/location.htm">Location Programming Guide</a></li> 
	<li><a href="../../../../org.tizen.mobile.native.apireference/group__CAPI__LOCATION__FRAMEWORK.html">Location API Reference</a></li>    
  </ul> 
 
  <div id="footer"> 
   <hr size="1" /> 
   <font size="1">Except as noted, this content - excluding the Code Examples - is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a> and all of the Code Examples contained herein are licensed under <a href="https://www.tizen.org/bsd-3-clause-license" target="_blank">BSD-3-Clause</a>.<br>For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font> 
  </div> 

  <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script> 
 
 </body>
</html>